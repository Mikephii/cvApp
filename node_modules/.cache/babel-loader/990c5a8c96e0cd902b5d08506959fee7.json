{"ast":null,"code":"var _jsxFileName = \"/home/michael/odin/cv-application/src/components/experience.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: this.props.edit,\n      inputs: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phone: \"\"\n      }\n    };\n    this.handler = this.handler.bind(this);\n    this.updateInputState = this.updateInputState.bind(this);\n    this.createInputs = this.createInputs.bind(this);\n    this.buttonHandler = this.buttonHandler.bind(this);\n  }\n\n  handler(e) {\n    this.updateInputState(e);\n  }\n\n  updateInputState(e) {\n    this.setState(prevState => ({\n      inputs: { ...prevState.inputs,\n        [e.target.id]: e.target.value\n      }\n    }), () => {\n      this.props.updateEducation(this.props.educationID, this.state.inputs);\n    });\n  }\n\n  componentDidMount() {\n    if (typeof this.props.fieldData != \"undefined\") {\n      this.setState({\n        inputs: this.props.fieldData\n      });\n    }\n  }\n\n  buttonHandler(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      edit: !prevState.edit\n    }));\n\n    if (this.state.edit) {\n      this.setState({\n        edit: false\n      });\n      this.props.addForm();\n    } else {\n      this.setState({\n        edit: true\n      });\n      this.props.deleteForm();\n    }\n  }\n\n  createInputs(state, type) {\n    let ids = [\"company\", \"role\", \"detail\", \"startDate\", \"endDate\"];\n\n    if (state) {\n      return ids.map(id => {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: type,\n          className: type,\n          id: id,\n          onChange: this.handler,\n          value: this.state.inputs[id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      return ids.map(id => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"savedText\",\n          children: this.state.inputs[id]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }, this);\n      });\n    }\n  }\n\n  createButton() {\n    if (this.state.edit) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.buttonHandler,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.buttonHandler,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company\",\n          children: \"Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), this.createInputs(this.state.edit)[0], /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), this.createInputs(this.state.edit)[1], /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"detail\",\n          children: \"Responsibilities:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), this.createInputs(this.state.edit)[2], /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dateDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: \"Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), this.createInputs(this.state.edit)[3], /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            children: \"End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), this.createInputs(this.state.edit)[4]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), this.createButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Experience;","map":{"version":3,"sources":["/home/michael/odin/cv-application/src/components/experience.js"],"names":["React","Component","Experience","constructor","props","state","edit","inputs","firstName","lastName","email","phone","handler","bind","updateInputState","createInputs","buttonHandler","e","setState","prevState","target","id","value","updateEducation","educationID","componentDidMount","fieldData","preventDefault","addForm","deleteForm","type","ids","map","createButton","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: this.props.edit,\n\n      inputs: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phone: \"\",\n      },\n    };\n    this.handler = this.handler.bind(this);\n    this.updateInputState = this.updateInputState.bind(this);\n    this.createInputs = this.createInputs.bind(this);\n    this.buttonHandler = this.buttonHandler.bind(this);\n  }\n\n  handler(e) {\n    this.updateInputState(e);\n  }\n\n  updateInputState(e) {\n    this.setState(\n      (prevState) => ({\n        inputs: { ...prevState.inputs, [e.target.id]: e.target.value },\n      }),\n      () => {\n        this.props.updateEducation(this.props.educationID, this.state.inputs);\n      }\n    );\n  }\n\n  componentDidMount() {\n    if (typeof this.props.fieldData != \"undefined\") {\n      this.setState({\n        inputs: this.props.fieldData,\n      });\n    }\n  }\n\n  buttonHandler(e) {\n    e.preventDefault();\n\n    this.setState((prevState) => ({\n      edit: !prevState.edit,\n    }));\n\n    if (this.state.edit) {\n      this.setState({\n        edit: false,\n      });\n      this.props.addForm();\n    } else {\n      this.setState({\n        edit: true,\n      });\n      this.props.deleteForm();\n    }\n  }\n\n  createInputs(state, type) {\n    let ids = [\"company\", \"role\", \"detail\", \"startDate\", \"endDate\"];\n    if (state) {\n      return ids.map((id) => {\n        return (\n          <input\n            type={type}\n            className={type}\n            id={id}\n            onChange={this.handler}\n            value={this.state.inputs[id]}\n          ></input>\n        );\n      });\n    } else {\n      return ids.map((id) => {\n        return <p className=\"savedText\">{this.state.inputs[id]}</p>;\n      });\n    }\n  }\n\n  createButton() {\n    if (this.state.edit) {\n      return <button onClick={this.buttonHandler}>Add</button>;\n    } else {\n      return <button onClick={this.buttonHandler}>Edit</button>;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"form\">\n          <label htmlFor=\"company\">Company:</label>\n          {this.createInputs(this.state.edit)[0]}\n          <label htmlFor=\"role\">Role:</label>\n          {this.createInputs(this.state.edit)[1]}\n          <label htmlFor=\"detail\">Responsibilities:</label>\n          {this.createInputs(this.state.edit)[2]}\n\n          <div className=\"dateDiv\">\n            <label htmlFor=\"startDate\">Start Date:</label>\n            {this.createInputs(this.state.edit)[3]}\n            <label htmlFor=\"endDate\">End Date:</label>\n            {this.createInputs(this.state.edit)[4]}\n          </div>\n          {this.createButton()}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Experience;\n"]},"metadata":{},"sourceType":"module"}
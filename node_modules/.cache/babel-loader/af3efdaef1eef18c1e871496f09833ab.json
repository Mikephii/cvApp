{"ast":null,"code":"var _jsxFileName = \"/home/michael/odin/cv-application/src/App.js\";\nimport \"./App.css\";\nimport Personal from \"./components/personal\";\nimport EducationsHandler from \"./components/educationsHandler\";\nimport ExperienceHandler from \"./components/experienceHandler\";\nimport Preview from \"./components/preview\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      education: [],\n      experience: []\n    };\n    this.updatePerson = this.updatePerson.bind(this);\n    this.updateEducation = this.updateEducation.bind(this);\n    this.updateExperience = this.updateExperience.bind(this);\n  }\n\n  updatePerson(stateName, value) {\n    this.setState(prevState => ({\n      [stateName]: value\n    }));\n  }\n\n  updateEducation(index, educationObj) {\n    console.log(\"update education\");\n    let educationCopy = [...this.state.education];\n    let newEducation = educationObj;\n    educationCopy[index] = newEducation;\n    this.setState(prevState => ({\n      education: prevState.education.splice(index, 0, educationObj)\n    }));\n  }\n\n  updateExperience(index, experienceObj) {\n    console.log(\"update education\");\n    let experienceCopy = [...this.state.experience];\n    let newExperience = experienceObj;\n    experienceCopy[index] = newExperience;\n    this.setState(prevState => ({\n      experience: experienceCopy\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Personal, {\n        updateCV: this.updatePerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EducationsHandler, {\n        updateEducation: this.updateEducation,\n        cvData: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExperienceHandler, {\n        updateEducation: this.updateExperience,\n        cvData: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        cvData: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/michael/odin/cv-application/src/App.js"],"names":["Personal","EducationsHandler","ExperienceHandler","Preview","React","Component","App","constructor","state","firstName","lastName","email","phone","education","experience","updatePerson","bind","updateEducation","updateExperience","stateName","value","setState","prevState","index","educationObj","console","log","educationCopy","newEducation","splice","experienceObj","experienceCopy","newExperience","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,SAAS,EAAE,EALA;AAMXC,MAAAA,UAAU,EAAE;AAND,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDD,EAAAA,YAAY,CAACI,SAAD,EAAYC,KAAZ,EAAmB;AAC7B,SAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5B,OAACH,SAAD,GAAaC;AADe,KAAhB,CAAd;AAGD;;AAEDH,EAAAA,eAAe,CAACM,KAAD,EAAQC,YAAR,EAAsB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAIC,aAAa,GAAG,CAAC,GAAG,KAAKnB,KAAL,CAAWK,SAAf,CAApB;AACA,QAAIe,YAAY,GAAGJ,YAAnB;AACAG,IAAAA,aAAa,CAACJ,KAAD,CAAb,GAAuBK,YAAvB;AACA,SAAKP,QAAL,CAAeC,SAAD,KAAgB;AAC5BT,MAAAA,SAAS,EAAES,SAAS,CAACT,SAAV,CAAoBgB,MAApB,CAA2BN,KAA3B,EAAkC,CAAlC,EAAqCC,YAArC;AADiB,KAAhB,CAAd;AAGD;;AAEDN,EAAAA,gBAAgB,CAACK,KAAD,EAAQO,aAAR,EAAuB;AACrCL,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAIK,cAAc,GAAG,CAAC,GAAG,KAAKvB,KAAL,CAAWM,UAAf,CAArB;AACA,QAAIkB,aAAa,GAAGF,aAApB;AACAC,IAAAA,cAAc,CAACR,KAAD,CAAd,GAAwBS,aAAxB;AACA,SAAKX,QAAL,CAAeC,SAAD,KAAgB;AAC5BR,MAAAA,UAAU,EAAEiB;AADgB,KAAhB,CAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKlB;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,iBAAD;AACE,QAAA,eAAe,EAAE,KAAKE,eADxB;AAEE,QAAA,MAAM,EAAE,KAAKT;AAFf;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,iBAAD;AACE,QAAA,eAAe,EAAE,KAAKU,gBADxB;AAEE,QAAA,MAAM,EAAE,KAAKV;AAFf;AAAA;AAAA;AAAA;AAAA,cANF,eAUE,QAAC,OAAD;AAAS,QAAA,MAAM,EAAE,KAAKA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA1DyB;;AA6D5B,eAAeF,GAAf","sourcesContent":["import \"./App.css\";\nimport Personal from \"./components/personal\";\nimport EducationsHandler from \"./components/educationsHandler\";\nimport ExperienceHandler from \"./components/experienceHandler\";\nimport Preview from \"./components/preview\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      education: [],\n      experience: [],\n    };\n    this.updatePerson = this.updatePerson.bind(this);\n    this.updateEducation = this.updateEducation.bind(this);\n    this.updateExperience = this.updateExperience.bind(this);\n  }\n\n  updatePerson(stateName, value) {\n    this.setState((prevState) => ({\n      [stateName]: value,\n    }));\n  }\n\n  updateEducation(index, educationObj) {\n    console.log(\"update education\");\n    let educationCopy = [...this.state.education];\n    let newEducation = educationObj;\n    educationCopy[index] = newEducation;\n    this.setState((prevState) => ({\n      education: prevState.education.splice(index, 0, educationObj),\n    }));\n  }\n\n  updateExperience(index, experienceObj) {\n    console.log(\"update education\");\n    let experienceCopy = [...this.state.experience];\n    let newExperience = experienceObj;\n    experienceCopy[index] = newExperience;\n    this.setState((prevState) => ({\n      experience: experienceCopy,\n    }));\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <Personal updateCV={this.updatePerson}></Personal>\n        <EducationsHandler\n          updateEducation={this.updateEducation}\n          cvData={this.state}\n        ></EducationsHandler>\n        <ExperienceHandler\n          updateEducation={this.updateExperience}\n          cvData={this.state}\n        ></ExperienceHandler>\n        <Preview cvData={this.state}></Preview>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
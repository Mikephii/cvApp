{"version":3,"sources":["components/personal.js","components/education.js","components/educationsHandler.js","components/experience.js","components/experienceHandler.js","components/preview.js","App.js","index.js"],"names":["Personal","props","state","edit","inputs","firstName","lastName","email","phone","handler","bind","updateInputState","createInputs","save","e","this","updateCV","target","id","value","setState","prevState","preventDefault","type","ids","map","className","onChange","onClick","htmlFor","createButton","Component","Education","buttonHandler","updateEducation","educationID","fieldData","addForm","deleteForm","required","EducationsHandler","educations","createForms","i","formsArray","cvData","education","Experience","createTextArea","ExperienceHandler","experience","Preview","previewEducations","previewExperience","jsxArray","forEach","educationObj","newJsx","university","degree","startDate","endDate","company","role","detail","App","updatePerson","updateExperience","stateName","index","console","log","educationCopy","newEducation","experienceObj","experienceCopy","newExperience","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69f19e32.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./formStyles.css\";\n\nclass Personal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: true,\n      inputs: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phone: \"\",\n      },\n    };\n    this.handler = this.handler.bind(this);\n    this.updateInputState = this.updateInputState.bind(this);\n    this.createInputs = this.createInputs.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  handler(e) {\n    this.updateInputState(e);\n    this.props.updateCV(e.target.id, e.target.value);\n  }\n\n  updateInputState(e) {\n    this.setState((prevState) => ({\n      inputs: { ...prevState.inputs, [e.target.id]: e.target.value },\n    }));\n  }\n\n  save(e) {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      edit: !prevState.edit,\n    }));\n  }\n\n  createInputs(state, type) {\n    let ids = [\"firstName\", \"lastName\", \"email\", \"phone\"];\n    if (state) {\n      return ids.map((id) => {\n        return (\n          <input\n            className={type}\n            id={id}\n            onChange={this.handler}\n            value={this.state.inputs[id]}\n          ></input>\n        );\n      });\n    } else {\n      return ids.map((id) => {\n        return <p className=\"savedText\">{this.state.inputs[id]}</p>;\n      });\n    }\n  }\n\n  createButton() {\n    if (this.state.edit) {\n      return (\n        <button className=\"formButton\" onClick={this.save}>\n          Add\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"formButton\" onClick={this.save}>\n          Edit\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"personalBox\">\n        <h2 className=\"formHeader\">Personal Details</h2>\n        <form className=\"form\">\n          <label className=\"label\" htmlFor=\"firstName\">\n            First Name:\n          </label>\n          {this.createInputs(this.state.edit, \"text\")[0]}\n          <label className=\"label\" htmlFor=\"lastName\">\n            Last Name:\n          </label>\n          {this.createInputs(this.state.edit, \"text\")[1]}\n          <label className=\"label\" htmlFor=\"email\">\n            Email:\n          </label>\n          {this.createInputs(this.state.edit, \"text\")[2]}\n          <label className=\"label\" htmlFor=\"phone\">\n            Phone:\n          </label>\n          {this.createInputs(this.state.edit, \"text\")[3]}\n          {this.createButton()}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Personal;\n","import React, { Component } from \"react\";\n\nclass Education extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: this.props.edit,\n\n      inputs: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phone: \"\",\n      },\n    };\n    this.handler = this.handler.bind(this);\n    this.updateInputState = this.updateInputState.bind(this);\n    this.createInputs = this.createInputs.bind(this);\n    this.buttonHandler = this.buttonHandler.bind(this);\n  }\n\n  handler(e) {\n    this.updateInputState(e);\n  }\n\n  updateInputState(e) {\n    this.setState(\n      (prevState) => ({\n        inputs: { ...prevState.inputs, [e.target.id]: e.target.value },\n      }),\n      () => {\n        this.props.updateEducation(this.props.educationID, this.state.inputs);\n      }\n    );\n  }\n  componentDidMount() {\n    if (typeof this.props.fieldData != \"undefined\") {\n      this.setState({\n        inputs: this.props.fieldData,\n      });\n    }\n  }\n\n  buttonHandler(e) {\n    e.preventDefault();\n    this.updateInputState(e);\n\n    this.setState((prevState) => ({\n      edit: !prevState.edit,\n    }));\n\n    if (this.state.edit) {\n      this.setState({\n        edit: false,\n      });\n      this.props.addForm();\n    } else {\n      this.setState({\n        edit: true,\n      });\n      this.props.deleteForm();\n    }\n  }\n\n  createInputs(state, type) {\n    let ids = [\"university\", \"degree\", \"startDate\", \"endDate\"];\n    if (state) {\n      return ids.map((id) => {\n        return (\n          <input\n            required={true}\n            type={type}\n            className={type}\n            id={id}\n            onChange={this.handler}\n            value={this.state.inputs[id]}\n          ></input>\n        );\n      });\n    } else {\n      return ids.map((id) => {\n        return <p className=\"savedText\">{this.state.inputs[id]}</p>;\n      });\n    }\n  }\n\n  createButton() {\n    if (this.state.edit) {\n      return (\n        <button className=\"formButton\" onClick={this.buttonHandler}>\n          Add\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"formButton\" onClick={this.buttonHandler}>\n          Edit\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"form\">\n          <label className=\"label\" htmlFor=\"university\">\n            University:\n          </label>\n          {this.createInputs(this.state.edit, \"text\")[0]}\n          <label className=\"label\" htmlFor=\"degree\">\n            Degree:\n          </label>\n          {this.createInputs(this.state.edit, \"text\")[1]}\n          <div className=\"datesDiv\">\n            <label className=\"label\" htmlFor=\"startDate\">\n              Start Date:\n            </label>\n            {this.createInputs(this.state.edit, \"date\")[2]}\n            <label className=\"label\" htmlFor=\"endDate\">\n              End Date:\n            </label>\n            {this.createInputs(this.state.edit, \"date\")[3]}\n          </div>\n          {this.createButton()}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Education;\n","import React, { Component } from \"react\";\nimport Education from \"./education\";\n\nclass EducationsHandler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      educations: 1,\n    };\n    this.createForms = this.createForms.bind(this);\n    this.addForm = this.addForm.bind(this);\n\n    this.deleteForm = this.deleteForm.bind(this);\n  }\n\n  createForms() {\n    let formsArray = [];\n    var i;\n    for (i = 1; i < this.state.educations; i++) {\n      formsArray = [\n        ...formsArray,\n        <Education\n          key={i - 1}\n          addForm={this.addForm}\n          deleteForm={this.deleteForm}\n          cvData={this.props.cvData}\n          fieldData={this.props.cvData.education[i - 1]}\n          updateEducation={this.props.updateEducation}\n          edit={false}\n          educationID={i - 1}\n        ></Education>,\n      ];\n    }\n    formsArray = [\n      ...formsArray,\n      <Education\n        key={this.state.educations - 1}\n        addForm={this.addForm}\n        deleteForm={this.deleteForm}\n        cvData={this.props.cvData}\n        fieldData={this.props.cvData.education[this.state.educations - 1]}\n        updateEducation={this.props.updateEducation}\n        edit=\"true\"\n        educationID={this.state.educations - 1}\n      ></Education>,\n    ];\n    return formsArray;\n  }\n\n  addForm() {\n    this.setState((prevState) => ({\n      educations: prevState.educations + 1,\n    }));\n  }\n\n  deleteForm() {\n    this.setState((prevState) => ({\n      educations: prevState.educations - 1,\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"educationBox\">\n        <h2 className=\"formHeader\">Education</h2>\n        {this.createForms()}\n      </div>\n    );\n  }\n}\n\nexport default EducationsHandler;\n","import React, { Component } from \"react\";\n\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: this.props.edit,\n\n      inputs: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phone: \"\",\n      },\n    };\n    this.handler = this.handler.bind(this);\n    this.updateInputState = this.updateInputState.bind(this);\n    this.createInputs = this.createInputs.bind(this);\n    this.buttonHandler = this.buttonHandler.bind(this);\n    this.createTextArea = this.createTextArea.bind(this);\n  }\n\n  handler(e) {\n    this.updateInputState(e);\n  }\n\n  updateInputState(e) {\n    this.setState(\n      (prevState) => ({\n        inputs: { ...prevState.inputs, [e.target.id]: e.target.value },\n      }),\n      () => {\n        this.props.updateEducation(this.props.educationID, this.state.inputs);\n      }\n    );\n  }\n\n  componentDidMount() {\n    if (typeof this.props.fieldData != \"undefined\") {\n      this.setState({\n        inputs: this.props.fieldData,\n      });\n    }\n  }\n\n  buttonHandler(e) {\n    e.preventDefault();\n\n    this.setState((prevState) => ({\n      edit: !prevState.edit,\n    }));\n\n    if (this.state.edit) {\n      this.setState({\n        edit: false,\n      });\n      this.props.addForm();\n    } else {\n      this.setState({\n        edit: true,\n      });\n      this.props.deleteForm();\n    }\n  }\n\n  createInputs(state, type) {\n    let ids = [\"company\", \"role\", \"detail\", \"startDate\", \"endDate\"];\n    if (state) {\n      return ids.map((id) => {\n        return (\n          <input\n            type={type}\n            className={type}\n            id={id}\n            onChange={this.handler}\n            value={this.state.inputs[id]}\n          ></input>\n        );\n      });\n    } else {\n      return ids.map((id) => {\n        return <p className=\"savedText\">{this.state.inputs[id]}</p>;\n      });\n    }\n  }\n\n  createTextArea(state, type) {\n    let ids = [\"company\", \"role\", \"detail\", \"startDate\", \"endDate\"];\n    if (state) {\n      return ids.map((id) => {\n        return (\n          <textarea\n            className=\"textArea\"\n            id={id}\n            onChange={this.handler}\n            value={this.state.inputs[id]}\n          ></textarea>\n        );\n      });\n    } else {\n      return ids.map((id) => {\n        return <p className=\"savedText\">{this.state.inputs[id]}</p>;\n      });\n    }\n  }\n\n  createButton() {\n    if (this.state.edit) {\n      return (\n        <button className=\"formButton\" onClick={this.buttonHandler}>\n          Add\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"formButton\" onClick={this.buttonHandler}>\n          Edit\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"form\">\n          <label className=\"label\" htmlFor=\"company\">\n            Company:\n          </label>\n          {this.createInputs(this.state.edit, \"text\")[0]}\n          <label className=\"label\" htmlFor=\"role\">\n            Role:\n          </label>\n          {this.createInputs(this.state.edit, \"text\")[1]}\n          <label className=\"label\" htmlFor=\"detail\">\n            Responsibilities:\n          </label>\n          {this.createTextArea(this.state.edit, \"text\")[2]}\n\n          <div className=\"datesDiv\">\n            <label className=\"label\" htmlFor=\"startDate\">\n              Start Date:\n            </label>\n            {this.createInputs(this.state.edit, \"date\")[3]}\n            <label className=\"label\" htmlFor=\"endDate\">\n              End Date:\n            </label>\n            {this.createInputs(this.state.edit, \"date\")[4]}\n          </div>\n          {this.createButton()}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Experience;\n","import React, { Component } from \"react\";\nimport Experience from \"./experience\";\n\nclass ExperienceHandler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      educations: 1,\n    };\n    this.createForms = this.createForms.bind(this);\n    this.addForm = this.addForm.bind(this);\n\n    this.deleteForm = this.deleteForm.bind(this);\n  }\n\n  createForms() {\n    let formsArray = [];\n    var i;\n    for (i = 1; i < this.state.educations; i++) {\n      formsArray = [\n        ...formsArray,\n        <Experience\n          key={i - 1}\n          addForm={this.addForm}\n          deleteForm={this.deleteForm}\n          fieldData={this.props.cvData.experience[i - 1]}\n          cvData={this.props.cvData}\n          updateEducation={this.props.updateEducation}\n          edit={false}\n          educationID={i - 1}\n        ></Experience>,\n      ];\n    }\n    formsArray = [\n      ...formsArray,\n      <Experience\n        key={this.state.educations - 1}\n        addForm={this.addForm}\n        deleteForm={this.deleteForm}\n        fieldData={this.props.cvData.experience[this.state.educations - 1]}\n        cvData={this.props.cvData}\n        updateEducation={this.props.updateEducation}\n        edit=\"true\"\n        educationID={this.state.educations - 1}\n      ></Experience>,\n    ];\n    return formsArray;\n  }\n\n  addForm() {\n    this.setState((prevState) => ({\n      educations: prevState.educations + 1,\n    }));\n  }\n\n  deleteForm() {\n    this.setState((prevState) => ({\n      educations: prevState.educations - 1,\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"experienceBox\">\n        <h2 className=\"formHeader\">Experience</h2>\n        {this.createForms()}\n      </div>\n    );\n  }\n}\n\nexport default ExperienceHandler;\n","import React, { Component } from \"react\";\n\nclass Preview extends Component {\n  constructor(props) {\n    super(props);\n\n    this.previewEducations = this.previewEducations.bind(this);\n    this.previewExperience = this.previewExperience.bind(this);\n  }\n\n  previewEducations() {\n    let jsxArray = [];\n\n    this.props.cvData.education.forEach((educationObj) => {\n      let newJsx = (\n        <div className=\"cvCardEdu\">\n          <h2 className=\"cvTextBold\">{educationObj.university}</h2>\n          <p className=\"cvText\">{educationObj.degree}</p>\n          <p className=\"cvStart\">{educationObj.startDate} -</p>\n          <p className=\"cvEnd\">{educationObj.endDate}</p>\n        </div>\n      );\n\n      jsxArray = [...jsxArray, newJsx];\n    });\n    return jsxArray;\n  }\n\n  previewExperience() {\n    let jsxArray = [];\n\n    this.props.cvData.experience.forEach((educationObj) => {\n      let newJsx = (\n        <div className=\"cvCardExp\">\n          <h2 className=\"cvTextBold\">{educationObj.company}</h2>\n          <p className=\"cvTextRole\"> - {educationObj.role}</p>\n          <p className=\"cvText\">{educationObj.detail}</p>\n          <p className=\"cvStart\">{educationObj.startDate} -</p>\n          <p className=\"cvEnd\">{educationObj.endDate}</p>\n        </div>\n      );\n\n      jsxArray = [...jsxArray, newJsx];\n    });\n    return jsxArray;\n  }\n\n  render() {\n    const { cvData } = this.props;\n    return (\n      <div className=\"target\">\n        <div className=\"previewContainer\">\n          <div className=\"cvContent\">\n            <h1 className=\"cvHeading\">\n              {cvData.firstName} {cvData.lastName}\n            </h1>\n            <div className=\"cvContact\">\n              <div>Email: {cvData.email}</div>\n              <div>Phone: {cvData.phone}</div>\n            </div>\n            <div className=\"cvEducation\">\n              <h2 className=\"cvSubheading\">Education</h2>\n              {this.previewEducations()}\n            </div>\n            <div className=\"cvExperience\">\n              <h2 className=\"cvSubheading\">Experience</h2>\n              {this.previewExperience()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Preview;\n","import \"./App.css\";\nimport Personal from \"./components/personal\";\nimport EducationsHandler from \"./components/educationsHandler\";\nimport ExperienceHandler from \"./components/experienceHandler\";\nimport Preview from \"./components/preview\";\nimport React, { Component } from \"react\";\nimport \"./components/formStyles.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      education: [],\n      experience: [],\n    };\n    this.updatePerson = this.updatePerson.bind(this);\n    this.updateEducation = this.updateEducation.bind(this);\n    this.updateExperience = this.updateExperience.bind(this);\n  }\n\n  updatePerson(stateName, value) {\n    this.setState((prevState) => ({\n      [stateName]: value,\n    }));\n  }\n\n  updateEducation(index, educationObj) {\n    console.log(\"update education\");\n    let educationCopy = [...this.state.education];\n    let newEducation = educationObj;\n    educationCopy[index] = newEducation;\n    this.setState((prevState) => ({\n      education: educationCopy,\n    }));\n  }\n\n  updateExperience(index, experienceObj) {\n    console.log(\"update education\");\n    let experienceCopy = [...this.state.experience];\n    let newExperience = experienceObj;\n    experienceCopy[index] = newExperience;\n    this.setState((prevState) => ({\n      experience: experienceCopy,\n    }));\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <Personal updateCV={this.updatePerson}></Personal>\n        <EducationsHandler\n          updateEducation={this.updateEducation}\n          cvData={this.state}\n        ></EducationsHandler>\n        <ExperienceHandler\n          updateEducation={this.updateExperience}\n          cvData={this.state}\n        ></ExperienceHandler>\n        <Preview cvData={this.state}></Preview>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}